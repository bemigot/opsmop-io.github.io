.. image:: ../opsmop.png
   :alt: OpsMop Logo

.. THIS FILE IS AUTOMATICALLY GENERATED
..
 .. Please do not send pull requests for this file directly.
.. If you wish to update these examples send a pull request here:
..
 .. https://github.com/opsmop/opsmop-demo/blob/master/module_docs/asserts.py
..
.. This comment only applies to the module documentation

.. _module_asserts:

Asserts Module
==============

The Assert module will fail a policy application when certain conditions are not true.
These may be passed in as key=value parameters and also as deferred expressions
such as Eval()


.. list-table:: Module Parameters
    :header-rows: 1

    * - Name
      - Help
      - Kind
      - Default
    * - evals
      - 
      - list
      - None
    * - variable_checks
      - 
      - dict
      - None


.. list-table:: Common Parameters
    :header-rows: 1

    * - Name
      - Help
      - Kind
      - Default
    * - ignore_errors
      - proceeds in the event of most error conditions
      - bool
      - False
    * - method
      - selects a non-default provider by name
      - str
      - None
    * - register
      - saves the resource result into a named variable
      - str
      - None
    * - signals
      - signals a handler event by name
      - list
      - None
    * - when
      - attaches a condition to this resource
      - any
      - None



Example: Basic Example
----------------------


Here are various passing asserts and finally one that will end the execution
of this policy with an error.

.. code-block:: python

    
    class BasicExample(Role):
    
        def set_variables(self):
            return dict(a=1, b=5150, c="badwolf")
    
        def set_resources(self):
            python_var = 2112
            check1 = Eval('b > 5000')
            check2 = Eval("c.upper() == 'BLUE'")
    
            return Resources(
    
    
                Set(c="blue"),
                Debug(),
                Asserts(a=1, b=5150),
                Asserts(Eval('b > 5000')),
                Asserts((python_var > 2000)),
                Asserts(c="blue"),
                Asserts(check2),
    
                # this will fail
                Asserts(b=3)
            )
    

Demo On GitHub
--------------
* `asserts.py <https://github.com/opsmop/opsmop-demo/blob/master/module_docs/asserts.py>`_

Type Implementations
--------------------
* `opsmop.types.asserts <https://github.com/opsmop/opsmop/tree/master/opsmop/types/asserts.py>`_

Provider Implementations
------------------------
* `opsmop.providers.asserts <https://github.com/opsmop/opsmop/tree/master/opsmop/providers/asserts.py>`_

Related Modules
---------------
* :ref:`module_debug`
* :ref:`module_echo`
* :ref:`module_set`
* :ref:`module_stop`

See Also
--------
* :ref:`language`
* :ref:`advanced`
* :ref:`development`

