.. image:: ../opsmop.png
   :alt: OpsMop Logo

.. THIS FILE IS AUTOMATICALLY GENERATED
..
 .. Please do not send pull requests for this file directly.
.. If you wish to update these examples send a pull request here:
..
 .. https://github.com/opsmop/opsmop-demo/blob/master/module_docs/service.py
..
.. This comment only applies to the module documentation

.. _module_service:

Service Module
==============

The Service module starts, stops, and enables or disables services. The default provider
for the operating system (for example, 'apt') is used unless the parameter 'method' is
supplied to pick an alternate provider.  See :ref:`method`.


.. list-table:: Module Parameters
    :header-rows: 1

    * - Name
      - Help
      - Kind
      - Default
    * - enabled
      - 
      - bool
      - True
    * - name
      - 
      - str
      - None
    * - restarted
      - 
      - bool
      - False
    * - started
      - 
      - bool
      - True


.. list-table:: Common Parameters
    :header-rows: 1

    * - Name
      - Help
      - Kind
      - Default
    * - ignore_errors
      - proceeds in the event of most error conditions
      - bool
      - False
    * - method
      - selects a non-default provider by name
      - str
      - None
    * - register
      - saves the resource result into a named variable
      - str
      - None
    * - signals
      - signals a handler event by name
      - list
      - None
    * - tags
      - allows applying part of the policy
      - list
      - None
    * - when
      - attaches a condition to this resource
      - any
      - None



Example: Basic Example
----------------------


Various service operations.  Change the name to a service you don't mind
restarting.

.. code-block:: python

    
    class BasicExample(Role):
    
        def set_resources(self):
    
            service_name = 'postgres'
    
            return Resources(
                Service(name='postgres', started=True, enabled=True),
                Service(name='postgres', started=False, enabled=False),
                Service(name='postgres', started=True, enabled=True)
            )
    
    

Demo On GitHub
--------------
* `service.py <https://github.com/opsmop/opsmop-demo/blob/master/module_docs/service.py>`_

Type Implementations
--------------------
* `opsmop.types.service <https://github.com/opsmop/opsmop/tree/master/opsmop/types/service.py>`_

Provider Implementations
------------------------
* `opsmop.providers.providers.brew <https://github.com/opsmop/opsmop/tree/master/opsmop/providers/providers/brew.py>`_
* `opsmop.providers.providers.systemd <https://github.com/opsmop/opsmop/tree/master/opsmop/providers/providers/systemd.py>`_

Related Modules
---------------
* :ref:`module_file`
* :ref:`module_package`

See Also
--------
* :ref:`language`
* :ref:`advanced`
* :ref:`development`

