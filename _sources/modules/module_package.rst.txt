.. image:: ../opsmop.png
   :alt: OpsMop Logo

.. THIS FILE IS AUTOMATICALLY GENERATED
..
 .. Please do not send pull requests for this file directly.
.. If you wish to update these examples send a pull request here:
..
 .. https://github.com/opsmop/opsmop-demo/blob/master/module_docs/package.py
..
.. This comment only applies to the module documentation

.. _module_package:

Package Module
==============

The package module is used to install packages. The default provider for the operating
system (for example, 'apt') is used unless the parameter 'method' is supplied to
pick an alternate provider.  See :ref:`method`.


.. list-table:: Module Parameters
    :header-rows: 1

    * - Name
      - Help
      - Kind
      - Default
    * - absent
      - if true, remove the package
      - bool
      - False
    * - latest
      - if true, upgrade the package regardless of version
      - bool
      - False
    * - name
      - the name of the package to install
      - str
      - None
    * - update_cache
      - if true, update the package cache
      - bool
      - False
    * - version
      - what version to install
      - str
      - None


.. list-table:: Common Parameters
    :header-rows: 1

    * - Name
      - Help
      - Kind
      - Default
    * - changed_when
      - accepts a lambda to determine if a state change should be recorded, whose parameter is the provider result
      - any
      - None
    * - failed_when
      - similar to ignore_errors but accepts a lambda function whose parameter is the provider result
      - any
      - None
    * - ignore_errors
      - proceeds in the event of most error conditions
      - bool
      - False
    * - method
      - selects a non-default provider by name
      - str
      - None
    * - when
      - attaches a condition to this resource
      - any
      - None



Example: Basic Example
----------------------


Installing and removing a package.

.. code-block:: python

    
    class BasicExample(Role):
    
        def set_variables(self):
            return dict(a=1, b=5150, c="badwolf")
    
        def main(self):
    
            # explicit package provider selection works like this
            # Package(name='cowsay', method='yum')
    
            # uninstall
            Package(name='cowsay', absent=True)
    
            # install
            Package(name='cowsay')
    
    
    
    

Demo On GitHub
--------------
* `package.py <https://github.com/opsmop/opsmop-demo/blob/master/module_docs/package.py>`_

Type Implementations
--------------------
* `opsmop.types.package <https://github.com/opsmop/opsmop/tree/master/opsmop/types/package.py>`_

Provider Implementations
------------------------
* `opsmop.providers.package.apt <https://github.com/opsmop/opsmop/tree/master/opsmop/providers/package/apt.py>`_
* `opsmop.providers.package.brew <https://github.com/opsmop/opsmop/tree/master/opsmop/providers/package/brew.py>`_
* `opsmop.providers.package.yum <https://github.com/opsmop/opsmop/tree/master/opsmop/providers/package/yum.py>`_
* `opsmop.providers.package.dnf <https://github.com/opsmop/opsmop/tree/master/opsmop/providers/package/dnf.py>`_

Related Modules
---------------
* :ref:`module_file`
* :ref:`module_service`

See Also
--------
* :ref:`language`
* :ref:`advanced`
* :ref:`development`

