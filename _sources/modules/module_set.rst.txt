.. image:: ../opsmop.png
   :alt: OpsMop Logo

.. THIS FILE IS AUTOMATICALLY GENERATED
..
 .. Please do not send pull requests for this file directly.
.. If you wish to update these examples send a pull request here:
..
 .. https://github.com/opsmop/opsmop-demo/blob/master/module_docs/set.py
..
.. This comment only applies to the module documentation

.. _module_set:

Set Module
==========

The Set module can store arbitrary variables.  These can be constants or the
results of Eval() calls. For another good example see the 'var_scoping'
example in the content/ directory of the opsmop-demo repo.


.. list-table:: Common Parameters
    :header-rows: 1

    * - Name
      - Help
      - Kind
      - Default
    * - changed_when
      - if set, only signal handlers if this is true
      - any
      - None
    * - failed_when
      - if set, specify terms of resource application failure
      - any
      - None
    * - ignore_errors
      - proceeds in the event of most error conditions
      - bool
      - False
    * - method
      - selects a non-default provider by name
      - str
      - None
    * - register
      - saves the resource result into a named variable
      - str
      - None
    * - signals
      - signals a handler event by name
      - list
      - None
    * - tags
      - allows applying part of the policy
      - list
      - None
    * - when
      - attaches a condition to this resource
      - any
      - None



Example: Basic Example
----------------------


Here we'll set some variables and show some values along the way.

.. code-block:: python

    
    class BasicExample(Role):
    
        def set_variables(self):
            return dict(a=1, b=5150, c="badwolf")
    
        def set_resources(self):
            return Resources(
                Debug(),
                Set(a=5, b=2112, c="ood", d=8675309),
                Debug(),
                Set(e=Eval('a+b'), f=Eval('c.upper()'), g=Platform.system(), rand=Chaos.random()),
                Debug(),
                Echo("sometimes this will print, but not always", when=Eval('rand > 0.5')),
                Debug(),
                Echo("The values are now, {{ e }}, {{ f }}, and {{ g }}")
            )
    
    
    

Demo On GitHub
--------------
* `set.py <https://github.com/opsmop/opsmop-demo/blob/master/module_docs/set.py>`_

Type Implementations
--------------------
* `opsmop.types.set <https://github.com/opsmop/opsmop/tree/master/opsmop/types/set.py>`_

Provider Implementations
------------------------
* `opsmop.providers.set <https://github.com/opsmop/opsmop/tree/master/opsmop/providers/set.py>`_

Related Modules
---------------
* :ref:`module_debug`
* :ref:`module_file`
* :ref:`module_echo`

See Also
--------
* :ref:`language`
* :ref:`advanced`
* :ref:`development`

