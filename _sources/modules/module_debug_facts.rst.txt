.. image:: ../opsmop.png
   :alt: OpsMop Logo

.. THIS FILE IS AUTOMATICALLY GENERATED
..
 .. Please do not send pull requests for this file directly.
.. If you wish to update these examples send a pull request here:
..
 .. https://github.com/opsmop/opsmop-demo/blob/master/module_docs/debug_facts.py
..
.. This comment only applies to the module documentation

.. _module_debug_facts:

DebugFacts Module
=================

The DebugFacts module shows most of the values of the basic facts available
within OpsMop. It is important to remember that OpsMop facts are not all constants,
and some useful facts take parameters.  The DebugFacts module will not dump
those facts that take parameters. See :ref:`facts` for the full list of available facts.
Using the DebugFacts modules is a great way to figure out what Fact to use in a
template, or what value to check against in a conditional.


.. list-table:: Common Parameters
    :header-rows: 1

    * - Name
      - Help
      - Kind
      - Default
    * - ignore_errors
      - proceeds in the event of most error conditions
      - bool
      - False
    * - method
      - selects a non-default provider by name
      - str
      - None
    * - register
      - saves the resource result into a named variable
      - str
      - None
    * - signals
      - signals a handler event by name
      - list
      - None
    * - when
      - attaches a condition to this resource
      - any
      - None



Example: Basic Example
----------------------


Here's a really easy way to see what the values of some variables are

.. code-block:: python

    
    class BasicExample(Role):
    
        def set_variables(self):
            return dict(a=1, b=5150, c="badwolf")
    
        def set_resources(self):
            return Resources(
                Echo("I am a {{ Facts.system() }} system"),
                DebugFacts(),
            )
    

Demo On GitHub
--------------
* `debug_facts.py <https://github.com/opsmop/opsmop-demo/blob/master/module_docs/debug_facts.py>`_

Type Implementations
--------------------
* `opsmop.types.debug_facts <https://github.com/opsmop/opsmop/tree/master/opsmop/types/debug_facts.py>`_

Provider Implementations
------------------------
* `opsmop.providers.debug_facts <https://github.com/opsmop/opsmop/tree/master/opsmop/providers/debug_facts.py>`_

Related Modules
---------------
* :ref:`module_debug`

See Also
--------
* :ref:`language`
* :ref:`advanced`
* :ref:`development`

